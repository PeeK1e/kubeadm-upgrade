---
- name: drain node
  ansible.builtin.shell: |
    kubectl drain {{ inventory_hostname }} \
      --ignore-daemonsets \
      --delete-emptydir-data \
      --grace-period={{ drainGracePeriod }} \
      --timeout={{ drainTimeOut }} \
      --kubeconfig /etc/kubernetes/admin.conf
  delegate_to: "{{ groups['control-plane'][0] }}"
  ignore_errors: true

- name: wait
  pause:
    prompt: Pausing after drain. (press ctrl+c and a to continue immediately)
    seconds: "{{ pauseDelayCordon }}"

- name: upgrade packages
  ansible.builtin.include_tasks: "upgrade-kube-packages.yaml"

- name: reload services
  block:
  - name: Systemd Daemon Reload
    ansible.builtin.systemd_service:
      daemon_reload: true
  - name: Restart Cri-o
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      name: crio
  - name: Restart kubelet
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      name: kubelet

- name: Restart machine
  ansible.builtin.reboot: ""

- name: Wait for kubelet to be running
  ansible.builtin.systemd_service:
    name: kubelet
    state: started
  register: kubeletDetails
  until: kubeletDetails.status.ActiveState == 'active'
  retries: 20
  delay: 15

- name: uncordon node
  ansible.builtin.shell: |
    kubectl uncordon {{ inventory_hostname }} \
      --kubeconfig /etc/kubernetes/admin.conf
  delegate_to: "{{ groups['control-plane'][0] }}"
  retries: 20
  delay: 15
  ignore_errors: true

- name: Wait uncordon
  ansible.builtin.pause:
    prompt: Pausing after uncordon. (press ctrl+c and a to continue immediately)
    seconds: "{{ pauseDelayUncordon }}"
