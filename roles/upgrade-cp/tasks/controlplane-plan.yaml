---
- name: upgrade kubeadm
  block:
    - name: unhold 
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: install #equals unhold

    - name: upgrade package
      ansible.builtin.apt:  
        pkg:
        - kubeadm={{ kube_version }}
        update_cache: true

    - name: hold 
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold

- name: get kubeadm version
  ansible.builtin.shell: kubeadm version -o json | jq -r '.clientVersion.gitVersion'
  register: kubeadm_version_out
  when: hostvars['K8S_TOKEN_HOLDER']['plan_version'] is not defined

- name: set plan version
  ansible.builtin.set_fact:
    plan_version: "{{ kubeadm_version_out.stdout }}"
  when: hostvars['K8S_TOKEN_HOLDER']['plan_version'] is not defined

- name: kubadm plan
  ansible.builtin.shell: "kubeadm upgrade plan {{ plan_version }}"
  register: kubeadm_plan_output
  when: hostvars['K8S_TOKEN_HOLDER']['plan_version'] is not defined
  
- name: output plan
  ansible.builtin.debug:
    msg: 
    - "plan stdout:"
    - "{{ kubeadm_plan_output.stdout_lines | default('N/A') }}"
    - "----------------------------------------------------"
    - "stderr:"
    - "{{ kubeadm_plan_output.stderr_lines | default('N/A') }}"
  ignore_errors: true
  when: hostvars['K8S_TOKEN_HOLDER']['plan_version'] is not defined

- name: check config
  ansible.builtin.pause:
    prompt:
    - "PLEASE READ THROUGH THE LOG OUTPUT ABOVE"
    - "if you are fine with the output of 'kubeadm upgrade plan' you may continue"
    - "this message only appears on the initial upgrade process"
    minutes: 15
  when: hostvars['K8S_TOKEN_HOLDER']['plan_version'] is not defined

- name: register planned version to dummy host
  add_host:
    name: "K8S_TOKEN_HOLDER"
    plan_version: "{{ plan_version }}"
  when: hostvars['K8S_TOKEN_HOLDER']['plan_version'] is not defined
